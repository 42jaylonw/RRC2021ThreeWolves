#!/usr/bin/python3

import json
import os.path
import sys
import time

from three_wolves.move_cube_env import RLPositionHistoryEnv
from stable_baselines3 import SAC
# from subprocess import check_output
import subprocess

def get_model_from_git():

    def run(cmd):
        process = subprocess.Popen(cmd,
                                   stdout=subprocess.PIPE,
                                   stderr=subprocess.PIPE)
        stdout, stderr = process.communicate()
        print(stdout.decode(), stderr.decode())
    # run(["git", "config", "--global", "--unset-all", "http.proxy"])
    # run(["git", "config", "--global", "user.name", "42jaylonw"])
    # run(["git", "config", "--global", "user.email", "42jaylonw@gmail.com"])
    # run(['git', 'clone', 'git@github.com:42jaylonw/rrc_2021_three_wolves.git'])
    # run(['wget', 'https://github.com/42jaylonw/trifinger_model/blob/master/triangle_cube_tg/best_model.zip'])
    run(['wget', '--no-check-certificate',
         "https://docs.google.com/uc?export=download&id=1V2grWmVCtEdl_2-B0d_VLPzNcJVhCrRZ",
         '-O', 'best_model.zip'])
    print(os.listdir())
    return "./best_model.zip"


def main():
    # the goal is passed as JSON string
    # goal_json = sys.argv[1]
    # goal_trajectory = json.loads(goal_json)

    env = RLPositionHistoryEnv(goal_trajectory=None,
                               visualization=False)

    # local
    # print(os.listdir('../../userhome/three_wolves'))
    # log_dir = f"../../userhome/three_wolves/model_save/triangle_cube_tg/best_model.zip"
    log_dir = get_model_from_git()
    # print(os.listdir('../../'), '\n\n\n')
    # f = ['srv', 'sys', 'tmp', 'usr', 'var', 'output', 'ws', 'run']
    # for dir_name in f:
    #     if '.' not in dir_name:
    #         print(f'\n\n{dir_name}\n')
    #         print(os.listdir(f'../../{dir_name}'))
    policy = SAC.load(log_dir)

    observation = env.reset()
    t = 0
    is_done = False
    while not is_done:
        action = policy.predict(observation)[0]
        observation, reward, is_done, info = env.step(action)
        t = info["time_index"]
        print("reward:", reward)


if __name__ == "__main__":
    main()
